set.seed(101)
sample = sample.split(df$Purchased, SplitRatio = 0.80)
train = subset(df, sample == T)
test = subset(df, sample == F)
head(train)
# data pre-processing (Scaling of the features)
#train[-3] = scale(train[-3])
#test[-3] = scale(test[-3])
#create the model
model = glm(formula = Purchased ~.,family = binomial, data = train)
# Read the dataset
df <- read.csv('Social_Network_Ads.csv')
head(df)
# Encode the target variable as a factor
df$Purchased <- factor(df$Purchased)
df$Gender <- as.numeric(as.factor(df$Gender))
# Split the dataset nto the train and test set
library(caTools)
set.seed(101)
sample = sample.split(df$Purchased, SplitRatio = 0.80)
train = subset(df, sample == T)
test = subset(df, sample == F)
head(train)
# data pre-processing (Scaling of the features)
#train[-3] = scale(train[-3])
#test[-3] = scale(test[-3])
#create the model
model = glm(formula = Purchased ~.,family = binomial, data = train)
pred = predict(model, test)
y_pred = ifelse(pred >0.1,1,0)
# Read the dataset
df <- read.csv('Social_Network_Ads.csv')
head(df)
# Encode the target variable as a factor
df$Purchased <- factor(df$Purchased)
df$Gender <- as.numeric(as.factor(df$Gender))
# Split the dataset nto the train and test set
library(caTools)
set.seed(101)
sample = sample.split(df$Purchased, SplitRatio = 0.80)
train = subset(df, sample == T)
test = subset(df, sample == F)
head(train)
# data pre-processing (Scaling of the features)
#train[-3] = scale(train[-3])
#test[-3] = scale(test[-3])
#create the model
model = glm(formula = Purchased ~.,family = binomial, data = train)
pred = predict(model, test)
y_pred = ifelse(pred >0.1,1,0)
# To evaluate the model create the confusion matrix
cm = table(test, y_pred)
# Read the dataset
df <- read.csv('Social_Network_Ads.csv')
head(df)
# Encode the target variable as a factor
df$Purchased <- factor(df$Purchased)
df$Gender <- as.numeric(as.factor(df$Gender))
# Split the dataset nto the train and test set
library(caTools)
set.seed(101)
sample = sample.split(df$Purchased, SplitRatio = 0.80)
train = subset(df, sample == T)
test = subset(df, sample == F)
head(train)
# data pre-processing (Scaling of the features)
#train[-3] = scale(train[-3])
#test[-3] = scale(test[-3])
#create the model
model = glm(formula = Purchased ~.,family = binomial, data = train)
pred = predict(model, test)
y_pred = ifelse(pred >0.1,1,0)
# To evaluate the model create the confusion matrix
cm = table(test, y_pred>0.5)
# Read the dataset
df <- read.csv('Social_Network_Ads.csv')
head(df)
# Encode the target variable as a factor
df$Purchased <- factor(df$Purchased)
df$Gender <- as.numeric(as.factor(df$Gender))
# Split the dataset nto the train and test set
library(caTools)
set.seed(101)
sample = sample.split(df$Purchased, SplitRatio = 0.80)
train = subset(df, sample == T)
test = subset(df, sample == F)
head(train)
# data pre-processing (Scaling of the features)
#train[-3] = scale(train[-3])
#test[-3] = scale(test[-3])
#create the model
model = glm(formula = Purchased ~.,family = binomial, data = train)
pred = predict(model, test)
y_pred = ifelse(pred >0.1,1,0)
# To evaluate the model create the confusion matrix
cm = table(test, pred)
# Read the dataset
df <- read.csv('Social_Network_Ads.csv')
head(df)
# Encode the target variable as a factor
df$Purchased <- factor(df$Purchased)
df$Gender <- as.numeric(as.factor(df$Gender))
# Split the dataset nto the train and test set
library(caTools)
set.seed(101)
sample = sample.split(df$Purchased, SplitRatio = 0.80)
train = subset(df, sample == T)
test = subset(df, sample == F)
head(train)
# data pre-processing (Scaling of the features)
#train[-3] = scale(train[-3])
#test[-3] = scale(test[-3])
#create the model
model = glm(formula = Purchased ~.,family = binomial, data = train)
pred = predict(model, test)
y_pred = ifelse(pred >0.1,1,0)
# To evaluate the model create the confusion matrix
cm = table(test[,3], pred)
cm
# Read the dataset
df <- read.csv('Social_Network_Ads.csv')
head(df)
# Encode the target variable as a factor
df$Purchased <- factor(df$Purchased)
df$Gender <- as.numeric(as.factor(df$Gender))
# Split the dataset nto the train and test set
library(caTools)
set.seed(101)
sample = sample.split(df$Purchased, SplitRatio = 0.80)
train = subset(df, sample == T)
test = subset(df, sample == F)
head(train)
# data pre-processing (Scaling of the features)
#train[-3] = scale(train[-3])
#test[-3] = scale(test[-3])
#create the model
model = glm(formula = Purchased ~.,family = binomial, data = train)
pred = predict(model, test)
y_pred = ifelse(pred >0.1,1,0)
# To evaluate the model create the confusion matrix
cm = table(test[,3], y_pred)
cm
# Read the dataset
df <- read.csv('Social_Network_Ads.csv')
head(df)
# Encode the target variable as a factor
df$Purchased <- factor(df$Purchased)
df$Gender <- as.numeric(as.factor(df$Gender))
# Split the dataset nto the train and test set
library(caTools)
set.seed(101)
sample = sample.split(df$Purchased, SplitRatio = 0.80)
train = subset(df, sample == T)
test = subset(df, sample == F)
head(train)
# data pre-processing (Scaling of the features)
#train[-3] = scale(train[-3])
#test[-3] = scale(test[-3])
#create the model
model = glm(formula = Purchased ~.,family = binomial, data = train)
pred = predict(model, test)
y_pred = ifelse(pred >0.1,1,0)
# To evaluate the model create the confusion matrix
cm = table(test[,3], y_pred >0.5)
cm
# Read the dataset
df <- read.csv('Social_Network_Ads.csv')
head(df)
# Encode the target variable as a factor
df$Purchased <- factor(df$Purchased)
df$Gender <- as.numeric(as.factor(df$Gender))
# Split the dataset nto the train and test set
library(caTools)
set.seed(101)
sample = sample.split(df$Purchased, SplitRatio = 0.80)
train = subset(df, sample == T)
test = subset(df, sample == F)
head(train)
# data pre-processing (Scaling of the features)
#train[-3] = scale(train[-3])
#test[-3] = scale(test[-3])
#create the model
model = glm(formula = Purchased ~.,family = binomial, data = train)
pred = predict(model, type = response, test)
y_pred = ifelse(pred >0.1,1,0)
# To evaluate the model create the confusion matrix
cm = table(test[,3], y_pred >0.5)
cm
# Read the dataset
df <- read.csv('Social_Network_Ads.csv')
head(df)
# Encode the target variable as a factor
df$Purchased <- factor(df$Purchased)
df$Gender <- as.numeric(as.factor(df$Gender))
# Split the dataset nto the train and test set
library(caTools)
set.seed(101)
sample = sample.split(df$Purchased, SplitRatio = 0.80)
train = subset(df, sample == T)
test = subset(df, sample == F)
head(train)
# data pre-processing (Scaling of the features)
#train[-3] = scale(train[-3])
#test[-3] = scale(test[-3])
#create the model
model = glm(formula = Purchased ~.,family = binomial, data = train)
pred = predict(model, type = 'response', test)
y_pred = ifelse(pred >0.1,1,0)
# To evaluate the model create the confusion matrix
cm = table(test[,3], y_pred >0.5)
cm
dataset = read.csv('Social_Network_Ads.csv')
We will select only Age and Salary
dataset = dataset [3:5]
dataset = read.csv('Social_Network_Ads.csv')
#We will select only Age and Salary
dataset = dataset [3:5]
dataset = read.csv('Social_Network_Ads.csv')
#We will select only Age and Salary
dataset = dataset [3:5]
dataset$Purchased = factor (dataset$Purchased, levels = c (0, 1))
dataset = read.csv('Social_Network_Ads.csv')
#We will select only Age and Salary
dataset = dataset [3:5]
dataset$Purchased = factor (dataset$Purchased, levels = c (0, 1))
# install.packages('caTools')
library(caTools)
set.seed(123)
split = sample.split(dataset$Purchased, SplitRatio = 0.75)
training_set = subset (dataset, split == TRUE)
test_set = subset (dataset, split == FALSE)
training_set[-3] = scale(training_set[-3])
test_set[-3] = scale(test_set[-3])
# Read the dataset
df <- read.csv('Social_Network_Ads.csv')
head(df)
# Encode the target variable as a factor
df$Purchased <- factor(df$Purchased, levels = c(0,1))
df$Gender <- as.numeric(as.factor(df$Gender))
# Split the dataset nto the train and test set
library(caTools)
set.seed(101)
sample = sample.split(df$Purchased, SplitRatio = 0.80)
train = subset(df, sample == T)
test = subset(df, sample == F)
head(train)
# data pre-processing (Scaling of the features)
#train[-3] = scale(train[-3])
#test[-3] = scale(test[-3])
#create the model
model = glm(formula = Purchased ~.,family = binomial, data = train)
pred = predict(model, type = 'response', test)
y_pred = ifelse(pred >0.1,1,0)
# To evaluate the model create the confusion matrix
cm = table(test[,3], y_pred >0.5)
cm
# Read the dataset
df <- read.csv('Social_Network_Ads.csv')
head(df)
# Encode the target variable as a factor
df$Purchased <- factor(df$Purchased, levels = c(0,1))
df$Gender <- as.numeric(as.factor(df$Gender))
# Split the dataset nto the train and test set
library(caTools)
set.seed(101)
sample = sample.split(df$Purchased, SplitRatio = 0.80)
train = subset(df, sample == T)
test = subset(df, sample == F)
head(train)
# data pre-processing (Scaling of the features)
train[-3] = scale(train[-3])
#test[-3] = scale(test[-3])
#create the model
model = glm(formula = Purchased ~.,family = binomial, data = train)
pred = predict(model, type = 'response', test)
y_pred = ifelse(pred >0.1,1,0)
# To evaluate the model create the confusion matrix
cm = table(test[,3], y_pred >0.5)
cm
dataset = read.csv('Social_Network_Ads.csv')
#We will select only Age and Salary
dataset = dataset [3:5]
dataset$Purchased = factor (dataset$Purchased, levels = c (0, 1))
# install.packages('caTools')
library(caTools)
set.seed(123)
split = sample.split(dataset$Purchased, SplitRatio = 0.75)
training_set = subset (dataset, split == TRUE)
test_set = subset (dataset, split == FALSE)
training_set[-3] = scale(training_set[-3])
test_set[-3] = scale(test_set[-3])
# Fitting Logistic Regression to the Training set
classifier = glm(formula = Purchased ~ .,
family = binomial,
data = training_set)
dataset = read.csv('Social_Network_Ads.csv')
#We will select only Age and Salary
dataset = dataset [3:5]
dataset$Purchased = factor (dataset$Purchased, levels = c (0, 1))
# install.packages('caTools')
library(caTools)
set.seed(123)
split = sample.split(dataset$Purchased, SplitRatio = 0.75)
training_set = subset (dataset, split == TRUE)
test_set = subset (dataset, split == FALSE)
training_set[-3] = scale(training_set[-3])
test_set[-3] = scale(test_set[-3])
# Fitting Logistic Regression to the Training set
classifier = glm(formula = Purchased ~ .,
family = binomial,
data = training_set)
prob_pred = predict (classifier, type = 'response', newdata = test_set[-3])
y_pred = ifelse (prob_pred > 0.5, 1, 0)
cm = table (test_set[, 3], y_pred > 0.5)
dataset = read.csv('Social_Network_Ads.csv')
#We will select only Age and Salary
dataset = dataset [3:5]
dataset$Purchased = factor (dataset$Purchased, levels = c (0, 1))
# install.packages('caTools')
library(caTools)
set.seed(123)
split = sample.split(dataset$Purchased, SplitRatio = 0.75)
training_set = subset (dataset, split == TRUE)
test_set = subset (dataset, split == FALSE)
training_set[-3] = scale(training_set[-3])
test_set[-3] = scale(test_set[-3])
# Fitting Logistic Regression to the Training set
classifier = glm(formula = Purchased ~ .,
family = binomial,
data = training_set)
prob_pred = predict (classifier, type = 'response', newdata = test_set[-3])
y_pred = ifelse (prob_pred > 0.5, 1, 0)
cm = table (test_set[, 3], y_pred > 0.5)
cm
# Read the dataset
df <- read.csv('Social_Network_Ads.csv')
df = df[3:5]
# Encode the target variable as a factor
df$Purchased <- factor(df$Purchased, levels = c(0,1))
df$Gender <- as.numeric(as.factor(df$Gender))
# Split the dataset nto the train and test set
library(caTools)
set.seed(101)
sample = sample.split(df$Purchased, SplitRatio = 0.80)
train = subset(df, sample == T)
test = subset(df, sample == F)
head(train)
# data pre-processing (Scaling of the features)
train[-3] = scale(train[-3])
#test[-3] = scale(test[-3])
#create the model
model = glm(formula = Purchased ~.,family = binomial, data = train)
pred = predict(model, type = 'response', test)
y_pred = ifelse(pred >0.1,1,0)
# To evaluate the model create the confusion matrix
cm = table(test[,3], y_pred >0.5)
cm
# Read the dataset
df <- read.csv('Social_Network_Ads.csv')
df = df[3:5]
# Encode the target variable as a factor
df$Purchased <- factor(df$Purchased, levels = c(0,1))
#df$Gender <- as.numeric(as.factor(df$Gender))
# Split the dataset nto the train and test set
library(caTools)
set.seed(101)
sample = sample.split(df$Purchased, SplitRatio = 0.80)
train = subset(df, sample == T)
test = subset(df, sample == F)
head(train)
# data pre-processing (Scaling of the features)
train[-3] = scale(train[-3])
#test[-3] = scale(test[-3])
#create the model
model = glm(formula = Purchased ~.,family = binomial, data = train)
pred = predict(model, type = 'response', test)
y_pred = ifelse(pred >0.1,1,0)
# To evaluate the model create the confusion matrix
cm = table(test[,3], y_pred >0.5)
cm
# Read the dataset
df <- read.csv('Social_Network_Ads.csv')
df = df[3:5]
# Encode the target variable as a factor
df$Purchased <- factor(df$Purchased, levels = c(0,1))
#df$Gender <- as.numeric(as.factor(df$Gender))
# Split the dataset nto the train and test set
library(caTools)
set.seed(101)
sample = sample.split(df$Purchased, SplitRatio = 0.80)
train = subset(df, sample == T)
test = subset(df, sample == F)
head(train)
# data pre-processing (Scaling of the features)
train[-3] = scale(train[-3])
test[-3] = scale(test[-3])
#create the model
model = glm(formula = Purchased ~.,family = binomial, data = train)
pred = predict(model, type = 'response', test)
y_pred = ifelse(pred >0.1,1,0)
# To evaluate the model create the confusion matrix
cm = table(test[,3], y_pred >0.5)
cm
dataset = read.csv('Social_Network_Ads.csv')
#We will select only Age and Salary
dataset = dataset [3:5]
dataset$Purchased = factor (dataset$Purchased, levels = c (0, 1))
# install.packages('caTools')
library(caTools)
set.seed(123)
split = sample.split(dataset$Purchased, SplitRatio = 0.80)
training_set = subset (dataset, split == TRUE)
test_set = subset (dataset, split == FALSE)
training_set[-3] = scale(training_set[-3])
test_set[-3] = scale(test_set[-3])
# Fitting Logistic Regression to the Training set
classifier = glm(formula = Purchased ~ .,
family = binomial,
data = training_set)
prob_pred = predict (classifier, type = 'response', newdata = test_set[-3])
y_pred = ifelse (prob_pred > 0.5, 1, 0)
cm = table (test_set[, 3], y_pred > 0.5)
cm
# Read the dataset
df <- read.csv('Social_Network_Ads.csv')
df = df[3:5]
# Encode the target variable as a factor
df$Purchased <- factor(df$Purchased, levels = c(0,1))
#df$Gender <- as.numeric(as.factor(df$Gender))
# Split the dataset nto the train and test set
library(caTools)
set.seed(123)
sample = sample.split(df$Purchased, SplitRatio = 0.80)
train = subset(df, sample == T)
test = subset(df, sample == F)
head(train)
# data pre-processing (Scaling of the features)
train[-3] = scale(train[-3])
test[-3] = scale(test[-3])
#create the model
model = glm(formula = Purchased ~.,family = binomial, data = train)
pred = predict(model, type = 'response', test)
y_pred = ifelse(pred >0.1,1,0)
# To evaluate the model create the confusion matrix
cm = table(test[,3], y_pred >0.5)
cm
# Read the dataset
df <- read.csv('Social_Network_Ads.csv')
df = df[3:5]
# Encode the target variable as a factor
df$Purchased <- factor(df$Purchased, levels = c(0,1))
#df$Gender <- as.numeric(as.factor(df$Gender))
# Split the dataset nto the train and test set
library(caTools)
set.seed(101)
sample = sample.split(df$Purchased, SplitRatio = 0.80)
train = subset(df, sample == T)
test = subset(df, sample == F)
head(train)
# data pre-processing (Scaling of the features)
train[-3] = scale(train[-3])
test[-3] = scale(test[-3])
#create the model
model = glm(formula = Purchased ~.,family = binomial, data = train)
pred = predict(model, type = 'response', test)
y_pred = ifelse(pred >0.1,1,0)
# To evaluate the model create the confusion matrix
cm = table(test[,3], y_pred >0.5)
cm
dataset = read.csv('Social_Network_Ads.csv')
#We will select only Age and Salary
dataset = dataset [3:5]
dataset$Purchased = factor (dataset$Purchased, levels = c (0, 1))
# install.packages('caTools')
library(caTools)
set.seed(101)
split = sample.split(dataset$Purchased, SplitRatio = 0.80)
training_set = subset (dataset, split == TRUE)
test_set = subset (dataset, split == FALSE)
training_set[-3] = scale(training_set[-3])
test_set[-3] = scale(test_set[-3])
# Fitting Logistic Regression to the Training set
classifier = glm(formula = Purchased ~ .,
family = binomial,
data = training_set)
prob_pred = predict (classifier, type = 'response', newdata = test_set[-3])
y_pred = ifelse (prob_pred > 0.5, 1, 0)
cm = table (test_set[, 3], y_pred > 0.5)
cm
# Read the dataset
df <- read.csv('Social_Network_Ads.csv')
df = df[3:5]
# Encode the target variable as a factor
df$Purchased <- factor(df$Purchased, levels = c(0,1))
#df$Gender <- as.numeric(as.factor(df$Gender))
# Split the dataset nto the train and test set
library(caTools)
set.seed(101)
sample = sample.split(df$Purchased, SplitRatio = 0.80)
train = subset(df, sample == T)
test = subset(df, sample == F)
head(train)
# data pre-processing (Scaling of the features)
train[-3] = scale(train[-3])
test[-3] = scale(test[-3])
#create the model
model = glm(formula = Purchased ~.,family = binomial, data = train)
pred = predict(model, type = 'response', test)
y_pred = ifelse (pred > 0.5, 1, 0)
# To evaluate the model create the confusion matrix
cm = table(test[,3], y_pred >0.5)
cm
